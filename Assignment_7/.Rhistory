## Copy the PCA .eigenvec file to your computer, together with the samples_info.txt located in /projects/bmeg/A7/
## Load the .eigenvec file onto R, change the column names to: FID, IID, PC1, PC2, PC3, ..., PC20
#?# Type the command you used below: - 1pt
#scp alzhang_bmeg22@orca1.bcgsc.ca:/projects/bmeg/A7/samples_info.txt /Users/alicezhang/400E_Assignments/Assignment_7/samples_info.txt
eigenvec_table <- read.table('plink.eigenvec')
colnames(eigenvec_table) <- c("FID", "IID", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PC16", "PC17", "PC18", "PC19", "PC20")
## Load the samples_info.txt file onto R, change the column names to: FID, IID, SuperPopulation, Population
#?# Type the commands you used below: - 1pt
my_data <- read.delim("samples_info.txt")
colnames(my_data) <- c("IID", "FID", "SuperPopulation", "Population")
## Merge the .eigenvec and sample_info data.frames together using the IID column
## Tip: Look into the -merge- function!
#?# Type the command you used below: - 1pt
joined_df <- merge(my_data, eigenvec_table, by = "IID")
## Using ggplot create a scatterplot, using:
## x-axis: PC1
## y-axis: PC2
## color: SuperPopulation - to use the Population information to color the samples and be able to appreciate population structure!
#?# Type the command you used below: 1pt
library(ggplot2)
ggplot(data = joined_df, aes(PC1, PC2, colour = SuperPopulation))+geom_point()
#?# Where do the cohort samples fall? Are they all clustered together? - 1 pt
#The cohort samples are clustered together on the lefthand side of the graph, near the SAS and AMR superpopulation samples.
#?# Which Population would you use as a reference for imputation?, Why? - 1 pt
#TODO
#?# Do you think looking at the top two PCs is sufficient to tell what population is best? Why/why not? - 2 pt
#TODO
## Copy the PCA .eigenvec file to your computer, together with the samples_info.txt located in /projects/bmeg/A7/
## Load the .eigenvec file onto R, change the column names to: FID, IID, PC1, PC2, PC3, ..., PC20
#?# Type the command you used below: - 1pt
#scp alzhang_bmeg22@orca1.bcgsc.ca:/projects/bmeg/A7/samples_info.txt /Users/alicezhang/400E_Assignments/Assignment_7/samples_info.txt
eigenvec_table <- read.table('plink.eigenvec')
colnames(eigenvec_table) <- c("FID", "IID", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PC16", "PC17", "PC18", "PC19", "PC20")
## Load the samples_info.txt file onto R, change the column names to: FID, IID, SuperPopulation, Population
#?# Type the commands you used below: - 1pt
my_data <- read.delim("samples_info.txt")
colnames(my_data) <- c("IID", "FID", "SuperPopulation", "Population")
## Merge the .eigenvec and sample_info data.frames together using the IID column
## Tip: Look into the -merge- function!
#?# Type the command you used below: - 1pt
joined_df <- merge(my_data, eigenvec_table, by = "IID")
## Using ggplot create a scatterplot, using:
## x-axis: PC1
## y-axis: PC2
## color: SuperPopulation - to use the Population information to color the samples and be able to appreciate population structure!
#?# Type the command you used below: 1pt
library(ggplot2)
ggplot(data = joined_df, aes(PC1, PC2, colour = SuperPopulation))+geom_point()
#?# Where do the cohort samples fall? Are they all clustered together? - 1 pt
#The cohort samples are clustered together on the lefthand side of the graph, near the SAS and AMR superpopulation samples.
#?# Which Population would you use as a reference for imputation?, Why? - 1 pt
#TODO
#?# Do you think looking at the top two PCs is sufficient to tell what population is best? Why/why not? - 2 pt
#TODO
## Load the Mini_cohort_chr17_imputation_results.info.gz file to your Rstudio environment
# chr_info <- read.table(file = "Mini_cohort_chr17_imputation_results.info.gz", header = TRUE)
## Use the information in the file to answer the following questions. Accompany each of the answers with the code you used to get to them and a brief explanation of your thought process behind.
#?# What is the percentage of imputed SNPs? 0.5 pt
print(length( which( (chr_info$Genotyped == "Imputed") ))/length(chr_info$Genotyped))
## Load the Mini_cohort_chr17_imputation_results.info.gz file to your Rstudio environment
# chr_info <- read.table(file = "Mini_cohort_chr17_imputation_results.info.gz", header = TRUE)
## Use the information in the file to answer the following questions. Accompany each of the answers with the code you used to get to them and a brief explanation of your thought process behind.
#?# What is the percentage of imputed SNPs? 0.5 pt
print(length( which( (chr_info$Genotyped == "Imputed") ))/length(chr_info$Genotyped))
## Load the Mini_cohort_chr17_imputation_results.info.gz file to your Rstudio environment
chr_info <- read.table(file = "Mini_cohort_chr17_imputation_results.info.gz", header = TRUE)
## Use the information in the file to answer the following questions. Accompany each of the answers with the code you used to get to them and a brief explanation of your thought process behind.
#?# What is the percentage of imputed SNPs? 0.5 pt
print(length( which( (chr_info$Genotyped == "Imputed") ))/length(chr_info$Genotyped))
# 99.3%
## The metric of imputation quality is Rsq, this is the estimated value of the squared correlation between imputed and true genotypes. Since true genotypes are not available, this calculation is based on the idea that poorly imputed genotype counts will shrink towards their expectations based on allele frequencies observed in the population (https://genome.sph.umich.edu/wiki/Minimac3_Info_File#Rsq).  An Rsq < 0.3 is often used to flag poorly imputed SNPs.
#?# What is the percentage of poorly imputed SNPs?
print(length( which( (chr_info$Rsq < 0.3) ))/length(chr_info$Rsq))
#63.4%
#?# Create a histogram to visualize the distribution of the MAF - 1 pt
hist(chr_info$MAF)
#?# Which MAF is most frequent? What does that mean? - 1 pt
# 0-0.02. This means that there is a low frequency of the second most common allele occuring in the sample population. This could mean the SNP's major allele is conserved.
#?# What is the maximum MAF? Why is that? - 1 pt
max(chr_info$MAF)
#The max MAF is 0.5
#TODO why?
View(chr_info)
## Load the Mini_cohort_chr17_imputation_results.info.gz file to your Rstudio environment
chr_info <- read.table(file = "Mini_cohort_chr17_imputation_results.info.gz", header = TRUE)
## Use the information in the file to answer the following questions. Accompany each of the answers with the code you used to get to them and a brief explanation of your thought process behind.
#?# What is the percentage of imputed SNPs? 0.5 pt
print(length( which( (chr_info$Genotyped == "Imputed") ))/length(chr_info$Genotyped))
# 99.3%
## The metric of imputation quality is Rsq, this is the estimated value of the squared correlation between imputed and true genotypes. Since true genotypes are not available, this calculation is based on the idea that poorly imputed genotype counts will shrink towards their expectations based on allele frequencies observed in the population (https://genome.sph.umich.edu/wiki/Minimac3_Info_File#Rsq).  An Rsq < 0.3 is often used to flag poorly imputed SNPs.
#?# What is the percentage of poorly imputed SNPs?
print(length( which( (chr_info$Rsq < 0.3) ))/length(chr_info$Rsq))
#63.4%
#?# Create a histogram to visualize the distribution of the MAF - 1 pt
hist(chr_info$MAF)
#?# Which MAF is most frequent? What does that mean? - 1 pt
# 0-0.02. This means that there is a low frequency of the second most common allele occuring in the sample population. This could mean the SNP's major allele is conserved.
#?# What is the maximum MAF? Why is that? - 1 pt
max(chr_info$MAF)
#The max MAF is 0.5
#TODO why?
## Copy the PCA .eigenvec file to your computer, together with the samples_info.txt located in /projects/bmeg/A7/
## Load the .eigenvec file onto R, change the column names to: FID, IID, PC1, PC2, PC3, ..., PC20
#?# Type the command you used below: - 1pt
#scp alzhang_bmeg22@orca1.bcgsc.ca:/projects/bmeg/A7/samples_info.txt /Users/alicezhang/400E_Assignments/Assignment_7/samples_info.txt
eigenvec_table <- read.table('plink.eigenvec')
colnames(eigenvec_table) <- c("FID", "IID", "PC1", "PC2", "PC3", "PC4", "PC5", "PC6", "PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13", "PC14", "PC15", "PC16", "PC17", "PC18", "PC19", "PC20")
## Load the samples_info.txt file onto R, change the column names to: FID, IID, SuperPopulation, Population
#?# Type the commands you used below: - 1pt
my_data <- read.delim("samples_info.txt")
colnames(my_data) <- c("IID", "FID", "SuperPopulation", "Population")
## Merge the .eigenvec and sample_info data.frames together using the IID column
## Tip: Look into the -merge- function!
#?# Type the command you used below: - 1pt
joined_df <- merge(my_data, eigenvec_table, by = "IID")
## Using ggplot create a scatterplot, using:
## x-axis: PC1
## y-axis: PC2
## color: SuperPopulation - to use the Population information to color the samples and be able to appreciate population structure!
#?# Type the command you used below: 1pt
library(ggplot2)
ggplot(data = joined_df, aes(PC1, PC2, colour = SuperPopulation))+geom_point()
#?# Where do the cohort samples fall? Are they all clustered together? - 1 pt
#The cohort samples are clustered together on the lefthand side of the graph, near the SAS and AMR superpopulation samples.
#?# Which Population would you use as a reference for imputation?, Why? - 1 pt
#We can use the population EAS, that is east asian as a reference for imputation.
#TODO - gotta do a vibe check for the answer
#?# Do you think looking at the top two PCs is sufficient to tell what population is best? Why/why not? - 2 pt
#Looking at the top two PCs is sufficient to tell what population is best because PCAs are able to tell which components are able #to demonstrate the given data the best with a minimum number of components.
#TODO
## Using the base PRS formula outlined below, calculate the Tapas enjoyability PGS for the individuals in the Mini Cohort
#?# Include your rationale and the documented code you used - 5pt
mc_snp <- read.table(file = "MiniCohort_Tapas_SNPdosages.txt", header = TRUE)
tapas <- read.table(file="Tapas_enjoyability_GWAS_sumStats.txt")
View(my_data)
View(tapas)
View(my_data)
View(my_data)
View(tapas)
View(eigenvec_table)
View(my_data)
View(mc_snp)
View(my_data)
View(mc_snp)
View(mc_snp)
View(chr_info)
View(chr_info)
View(eigenvec_table)
View(mc_snp)
View(my_data)
View(tapas)
View(tapas)
View(mc_snp)
View(mc_snp)
View(tapas)
View(mc_snp)
tapas <- read.table(file="Tapas_enjoyability_GWAS_sumStats.txt", header = TRUE)
#basically multiply mc_snp by tapas with, rows of tapas with the respective mc_snp columns
columns <- colnames(mc_snp)
remove.vars(columns, names= c("IID","Tapas_enjoyability"))
#basically multiply mc_snp by tapas with, rows of tapas with the respective mc_snp columns
columns <- colnames(mc_snp)
cut_snp <- mc_snp[,-1]
cut_snp <- cut_snp[,-1]
View(cut_snp)
## Load to your RStudio:
## 1.  -Tapas_enjoyability_GWAS_sumStats.txt-
## 2.  -MiniCohort_Tapas_SNPdosages.txt-
## Both are located in the A7 directory on github.
## Using the base PRS formula outlined below, calculate the Tapas enjoyability PGS for the individuals in the Mini Cohort
#?# Include your rationale and the documented code you used - 5pt
mc_snp <- read.table(file = "MiniCohort_Tapas_SNPdosages.txt", header = TRUE)
tapas <- read.table(file="Tapas_enjoyability_GWAS_sumStats.txt", header = TRUE)
#basically multiply mc_snp by tapas with, rows of tapas with the respective mc_snp columns
columns <- colnames(mc_snp)
cut_snp <- mc_snp[,-1]
cut_snp <- cut_snp[,-1]
columns <- colnames(cut_snp)
pgs <- vector()
for (row in 1:nrow(cut_snp)){
val <- sum(cut_snp[row,]*tapas$Effect_Size)
append(pgs,val)
}
print(pgs)
#?# Use ggplot to plot the distribution of the Tapas PGS: - 2 pt
## Include the code and the graph in your analysis!
## Tip: http://www.cookbook-r.com/Graphs/Plotting_distributions_(ggplot2)/
#?# What is the distribution of the tapas PGS? - 1pt
## Load to your RStudio:
## 1.  -Tapas_enjoyability_GWAS_sumStats.txt-
## 2.  -MiniCohort_Tapas_SNPdosages.txt-
## Both are located in the A7 directory on github.
## Using the base PRS formula outlined below, calculate the Tapas enjoyability PGS for the individuals in the Mini Cohort
#?# Include your rationale and the documented code you used - 5pt
mc_snp <- read.table(file = "MiniCohort_Tapas_SNPdosages.txt", header = TRUE)
tapas <- read.table(file="Tapas_enjoyability_GWAS_sumStats.txt", header = TRUE)
#basically multiply mc_snp by tapas with, rows of tapas with the respective mc_snp columns
columns <- colnames(mc_snp)
cut_snp <- mc_snp[,-1]
cut_snp <- cut_snp[,-1]
columns <- colnames(cut_snp)
pgs <- c(1:63) #random values to start with
for (row in 1:nrow(cut_snp)){
val <- sum(cut_snp[row,]*tapas$Effect_Size)
append(pgs,val, row)
}
print(pgs)
#?# Use ggplot to plot the distribution of the Tapas PGS: - 2 pt
## Include the code and the graph in your analysis!
## Tip: http://www.cookbook-r.com/Graphs/Plotting_distributions_(ggplot2)/
#?# What is the distribution of the tapas PGS? - 1pt
## Load to your RStudio:
## 1.  -Tapas_enjoyability_GWAS_sumStats.txt-
## 2.  -MiniCohort_Tapas_SNPdosages.txt-
## Both are located in the A7 directory on github.
## Using the base PRS formula outlined below, calculate the Tapas enjoyability PGS for the individuals in the Mini Cohort
#?# Include your rationale and the documented code you used - 5pt
mc_snp <- read.table(file = "MiniCohort_Tapas_SNPdosages.txt", header = TRUE)
tapas <- read.table(file="Tapas_enjoyability_GWAS_sumStats.txt", header = TRUE)
#basically multiply mc_snp by tapas with, rows of tapas with the respective mc_snp columns
columns <- colnames(mc_snp)
cut_snp <- mc_snp[,-1]
cut_snp <- cut_snp[,-1]
columns <- colnames(cut_snp)
pgs <- c(1:63) #random values to start with
for (i in 1:nrow(cut_snp)){
val <- sum(cut_snp[i,]*tapas$Effect_Size)
pgs[i] <- val
}
print(pgs)
#?# Use ggplot to plot the distribution of the Tapas PGS: - 2 pt
## Include the code and the graph in your analysis!
## Tip: http://www.cookbook-r.com/Graphs/Plotting_distributions_(ggplot2)/
#?# What is the distribution of the tapas PGS? - 1pt
ggplot(aes(pgs))+geom_histogram()
ggplot(pgs, aes(pgs))+geom_histogram()
ggplot(pgs, aes(x=pgs))+geom_histogram()
#?# Use ggplot to plot the distribution of the Tapas PGS: - 2 pt
## Include the code and the graph in your analysis!
## Tip: http://www.cookbook-r.com/Graphs/Plotting_distributions_(ggplot2)/
pgs <- data.frame(pgs)
View(pgs)
ggplot(pgs, aes(x=pgs))+geom_histogram()
View(tapas)
View(mc_snp)
## The Tapas enjoyability was measured in a range of 0-1, with 0 being hating tapas and 1 being completely in love with tapas.
## This tapas likability is captured in the "Tapas_enjoyability" column of the -MiniCohort_Tapas_SNPdosages.txt- file.
#?# Make a scatterplot with a linear regression line, where x is the Tapas-PGS and y is their actual Tapas enjoyability - 2 pt
## Tip: http://www.sthda.com/english/wiki/ggplot2-scatter-plots-quick-start-guide-r-software-and-data-visualization
pgs$enjoy <- mc_snp$Tapas_enjoyability
ggplot(pgs, aes(x= pgs, y=enjoy)) + geom_point()+geom_smooth()
