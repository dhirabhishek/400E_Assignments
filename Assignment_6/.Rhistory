knitr::opts_chunk$set(echo = TRUE)
#install any of these you might not have already
library(ggplot2)
library(edgeR)
install.packages("edgeR")
install.packages(edgeR)
install.packages("edgeR")
install.packages("BiocManager")
BiocManager::install("edgeR")
#install any of these you might not have already
library(ggplot2)
library(edgeR)
library(reshape)
install.packages("reshape")
library(GenomicRanges)
install.packages(GenomicRanges)
BiocManager::install("GenomicRanges")
library(csaw)
install.packages("csaw")
BiocManager::install("csaw")
BiocManager::install("Biostrings")
#install any of these you might not have already
library(ggplot2)
library(edgeR)
library(reshape)
library(GenomicRanges)
library(csaw)
BiocManager::install("csaw")
update.packages()
#install any of these you might not have already
library(ggplot2)
library(edgeR)
library(reshape)
library(GenomicRanges)
library(csaw)
knitr::opts_chunk$set(echo = TRUE)
#install any of these you might not have already
library(ggplot2)
library(edgeR)
library(reshape)
library(GenomicRanges)
library(csaw)
library(Biostrings)
library(Biostrings)
library(csaw)
#install any of these you might not have already
library(ggplot2)
library(edgeR)
library(reshape)
library(GenomicRanges)
library(csaw)
library(Biostrings)
#download the data
atacSeqData = read.table(textConnection(readLines(gzcon(url("ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE148nnn/GSE148175/suppl/GSE148175_count_matrix_raw_atac_BRM014_ACBI1.csv.gz")))),
sep=",", stringsAsFactors = FALSE, header = TRUE)
#create a sample metadata data.frame
samples = data.frame(ID = names(atacSeqData)[2:ncol(atacSeqData)])
samples$replicate = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\1",samples$ID)
samples$timeName = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\2",samples$ID)
samples$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",samples$ID)
samples$treatment[samples$treatment=="N"]="BRM014"
samples$time= as.numeric(gsub("[a-z]*","",samples$timeName))
samples$time[grepl("min",samples$timeName)]=samples$time[grepl("min",samples$timeName)]/60
View(atacSeqData)
View(samples)
#here, if the point is there, it means such a sample exists, if absent it means that there is no such sample
#ggplot(data = sameMapped, aes(x=start_ori, y=start_nonDet)) +
#geom_point(color="steelblue") +
#facet_wrap(~ chr_ori)
ggplot(data =samples, aes(x=time, y = treatment))+ facet_wrap(~replicate)
#here, if the point is there, it means such a sample exists, if absent it means that there is no such sample
#ggplot(data = sameMapped, aes(x=start_ori, y=start_nonDet)) +
#geom_point(color="steelblue") +
#facet_wrap(~ chr_ori)
ggplot(data =samples, aes(x=time, y = treatment))+
geom_point()+
facet_wrap(~replicate)
??melt
?melt
knitr::opts_chunk$set(echo = TRUE)
#install any of these you might not have already
library(ggplot2)
library(edgeR)
library(reshape)
library(GenomicRanges)
library(csaw)
library(Biostrings)
#download the data
atacSeqData = read.table(textConnection(readLines(gzcon(url("ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE148nnn/GSE148175/suppl/GSE148175_count_matrix_raw_atac_BRM014_ACBI1.csv.gz")))),
sep=",", stringsAsFactors = FALSE, header = TRUE)
#create a sample metadata data.frame
samples = data.frame(ID = names(atacSeqData)[2:ncol(atacSeqData)])
samples$replicate = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\1",samples$ID)
samples$timeName = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\2",samples$ID)
samples$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",samples$ID)
samples$treatment[samples$treatment=="N"]="BRM014"
samples$time= as.numeric(gsub("[a-z]*","",samples$timeName))
samples$time[grepl("min",samples$timeName)]=samples$time[grepl("min",samples$timeName)]/60
View(samples)
# there are many ways you could do this; one of which is using the melt/cast functions from reshape
melted <- cast(samples,names(atacSeqData)[2:ncol(atacSeqData)], sum)
melted <- cast(atacSeqData,names(atacSeqData)[2:ncol(atacSeqData)], sum)
# there are many ways you could do this; one of which is using the melt/cast functions from reshape
df<-melt(atacSeqData)
df$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",samples$ID)
df2 <- aggregate(df$value, list(df$treatment), sum)
colnames(df2) <- c("reads", "treatment")
ggplot(data =df2, aes(x=treatment, y = reads))+
geom_point()
View(df2)
max(df2)
max(df2$treatment)
max(df2$reads)
min(df2$reads)
differenc <- max(df2$treatment) - min(df2$treatment)
perc <- differenc/min(df2$treatment)
perc
differenc <- max(df2$treatment) - min(df2$treatment)
perc <- differenc/min(df2$treatment) * 100
perc
View(df)
df<-melt(atacSeqData)
df$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",c("control","BI_protac"))
df3<-melt(atacSeqData)
df3$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",c("control","BI_protac"))
View(df3)
# there are many ways you could do this; one of which is using the melt/cast functions from reshape
df<-melt(atacSeqData)
df$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",samples$ID)
df2 <- aggregate(df$value, list(df$treatment), sum)
colnames(df2) <- c("reads", "treatment")
ggplot(data =df2, aes(x=treatment, y = reads))+
geom_point()
df<-melt(atacSeqData)
View(df)
# there are many ways you could do this; one of which is using the melt/cast functions from reshape
df<-melt(atacSeqData)
df$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",df$variable)
df2 <- aggregate(df$value, list(df$treatment), sum)
colnames(df2) <- c("treatment", "reads")
ggplot(data =df2, aes(x=treatment, y = reads))+
geom_point()
df3<-melt(atacSeqData)
df3$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",c("control","BI_protac"))
df3<-melt(atacSeqData)
df3$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",df3$variable)
df3 <- df3[df3$variable  == "BI_protac" || df3$variable == "control"]
df3<-melt(atacSeqData)
df3$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",df3$variable)
df3 <- df3[df3$variable  == "BI_protac"]
View(df)
df3<-melt(atacSeqData)
df3$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",df3$variable)
View(df3)
df3 <- df3[df3$treatment  == "BI_protac" || df3$treatment == "control"]
df3<-melt(atacSeqData)
df3<-melt(atacSeqData)
df3$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",df3$variable)
df3 <- df3[df3$treatment  == "BI_protac"]
df3 <- filter(df3, treatment == "BI_protac")
df3 <- filter(df3, df3$treatment == "BI_protac")
filter(df3, treatment == "BI_protac" | treatment == "control")
df3<-melt(atacSeqData)
df3<-melt(atacSeqData)
df3$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",df3$variable)
filter(df3, treatment == "BI_protac" | treatment == "control")
df3<-melt(atacSeqData)
df3$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",df3$variable)
stuff <- filter(df3, treatment == "BI_protac" | treatment == "control")
df3<-melt(atacSeqData)
df3<-melt(atacSeqData)
df3$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",df3$variable)
knitr::opts_chunk$set(echo = TRUE)
#install any of these you might not have already
library(ggplot2)
library(edgeR)
library(reshape)
library(GenomicRanges)
library(csaw)
library(Biostrings)
#download the data
atacSeqData = read.table(textConnection(readLines(gzcon(url("ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE148nnn/GSE148175/suppl/GSE148175_count_matrix_raw_atac_BRM014_ACBI1.csv.gz")))),
sep=",", stringsAsFactors = FALSE, header = TRUE)
#create a sample metadata data.frame
samples = data.frame(ID = names(atacSeqData)[2:ncol(atacSeqData)])
samples$replicate = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\1",samples$ID)
samples$timeName = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\2",samples$ID)
samples$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",samples$ID)
samples$treatment[samples$treatment=="N"]="BRM014"
samples$time= as.numeric(gsub("[a-z]*","",samples$timeName))
samples$time[grepl("min",samples$timeName)]=samples$time[grepl("min",samples$timeName)]/60
#here, if the point is there, it means such a sample exists, if absent it means that there is no such sample
#ggplot(data = sameMapped, aes(x=start_ori, y=start_nonDet)) +
#geom_point(color="steelblue") +
#facet_wrap(~ chr_ori)
ggplot(data =samples, aes(x=time, y = treatment))+
geom_point()+
facet_wrap(~replicate)
# there are many ways you could do this; one of which is using the melt/cast functions from reshape
df<-melt(atacSeqData)
df$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",df$variable)
df2 <- aggregate(df$value, list(df$treatment), sum)
colnames(df2) <- c("treatment", "reads")
ggplot(data =df2, aes(x=treatment, y = reads))+
geom_point()
max(df2$reads)
min(df2$reads)
differenc <- max(df2$treatment) - min(df2$treatment)
knitr::opts_chunk$set(echo = TRUE)
#install any of these you might not have already
library(ggplot2)
library(edgeR)
library(reshape)
library(GenomicRanges)
library(csaw)
library(Biostrings)
#download the data
atacSeqData = read.table(textConnection(readLines(gzcon(url("ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE148nnn/GSE148175/suppl/GSE148175_count_matrix_raw_atac_BRM014_ACBI1.csv.gz")))),
sep=",", stringsAsFactors = FALSE, header = TRUE)
#create a sample metadata data.frame
samples = data.frame(ID = names(atacSeqData)[2:ncol(atacSeqData)])
samples$replicate = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\1",samples$ID)
samples$timeName = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\2",samples$ID)
samples$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",samples$ID)
samples$treatment[samples$treatment=="N"]="BRM014"
samples$time= as.numeric(gsub("[a-z]*","",samples$timeName))
samples$time[grepl("min",samples$timeName)]=samples$time[grepl("min",samples$timeName)]/60
#here, if the point is there, it means such a sample exists, if absent it means that there is no such sample
#ggplot(data = sameMapped, aes(x=start_ori, y=start_nonDet)) +
#geom_point(color="steelblue") +
#facet_wrap(~ chr_ori)
ggplot(data =samples, aes(x=time, y = treatment))+
geom_point()+
facet_wrap(~replicate)
# there are many ways you could do this; one of which is using the melt/cast functions from reshape
df<-melt(atacSeqData)
df$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",df$variable)
df2 <- aggregate(df$value, list(df$treatment), sum)
colnames(df2) <- c("treatment", "reads")
ggplot(data =df2, aes(x=treatment, y = reads))+
geom_point()
max(df2$reads)
min(df2$reads)
differenc <- max(df2$treatment) - min(df2$treatment)
View(df2)
differenc <- max(df2$reads) - min(df2$reads)
perc <- differenc/min(df2$treatment) * 100
differenc <- max(df2$reads) - min(df2$reads)
perc <- differenc/min(df2$reads) * 100
perc
df3<-melt(atacSeqData)
df3$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",df3$variable)
stuff <- filter(df3, treatment == "BI_protac" | treatment == "control")
max(df2$reads)
differenc <- max(df2$reads) - min(df2$reads)
perc <- differenc/min(df2$reads) * 100
perc
(max(readCoverage$reads)-min(readCoverage$reads))/min(readCoverage$reads)*100
differenc <- max(df2$reads) - min(df2$reads)
perc <- differenc/min(df2$reads) * 100
perc
knitr::opts_chunk$set(echo = TRUE)
#install any of these you might not have already
library(ggplot2)
library(edgeR)
library(reshape)
library(GenomicRanges)
library(csaw)
library(Biostrings)
#download the data
atacSeqData = read.table(textConnection(readLines(gzcon(url("ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE148nnn/GSE148175/suppl/GSE148175_count_matrix_raw_atac_BRM014_ACBI1.csv.gz")))),
sep=",", stringsAsFactors = FALSE, header = TRUE)
#create a sample metadata data.frame
samples = data.frame(ID = names(atacSeqData)[2:ncol(atacSeqData)])
samples$replicate = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\1",samples$ID)
samples$timeName = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\2",samples$ID)
samples$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",samples$ID)
samples$treatment[samples$treatment=="N"]="BRM014"
samples$time= as.numeric(gsub("[a-z]*","",samples$timeName))
samples$time[grepl("min",samples$timeName)]=samples$time[grepl("min",samples$timeName)]/60
#here, if the point is there, it means such a sample exists, if absent it means that there is no such sample
ggplot(data =samples, aes(x=time, y = treatment))+
geom_point()+
facet_wrap(~replicate)
# there are many ways you could do this; one of which is using the melt/cast functions from reshape
meltedSeqData<-melt(atacSeqData)
meltedSeqData$treatment = gsub("(R[12])_([0-9]+[minh]+)_(.*)$","\\3",meltedSeqData$variable)
readCoverage <- aggregate(df$value, list(meltedSeqData$treatment), sum)
colnames(readCoverage) <- c("treatment", "reads")
ggplot(data =readCoverage, aes(x=treatment, y = reads))+
geom_point()
max(df2$treatment)
min(df2$treatment)
(max(readCoverage$reads)-min(readCoverage$reads))/min(readCoverage$reads)*100
downsampledSeqData<-meltedSeqData[meltedSeqData$treatment == "BI_protac" | meltedSeqData$treatment == "control", ]
library(edgeR)
protac_reads <- downsampledSeqData[downsampledSeqData$treatment == "BI_protac", ]
control_reads <- downsampledSeqData[downsampledSeqData$treatment == "control", ]
CPM_protac <- cpm(protac_reads$value)
CPM_control <- cpm(control_reads$value)
protac_density <- density(CPM_protac)
control_density <- density(CPM_control)
plot(protac_density, type = "l", col = "red")
lines(control_density,col="blue")
legend( x = "topright", legend=c("control", "BI_protac"),
col=c("blue", "red"), pch=c("-","-"))
plot(density(log(CPM_protac+1)), type = "l", col = "red")
lines(density(log(CPM_control+1)), col = "blue")
legend( x = "topright", legend=c("control", "BI_protac"),
col=c("blue", "red"), pch=c("-","-"))
largeCPM <- df3[cpm(df3$value) > 400, ]
